{"ast":null,"code":"import _ from 'lodash';\nimport jsonPlaceholder from '../api/jsonPlaceholder'; //in this case with redux we can't use async await syntax without a MIDDLEWARE LIKE THUNK because action creator need to return js plain object but async will return a request object so we need to use a MIDDLEWARE like thunk with redux \n// fetch posts from jsonPlaceholder\n\nexport const fetchPosts = () => async dispatch => {\n  const response = await jsonPlaceholder.get('./posts');\n  dispatch({\n    type: 'FETCH_POSTS',\n    payload: response.data\n  });\n}; //fetch users from jsonPlaceholder\n\nexport const fetchUsers = id => async dispatch => {}; //memoizing out action creator function to avoid dons and repeating of data rendering\n\nconst _fetchUsers = _.memoize(async (id, dispatch) => {\n  const response = await jsonPlaceholder.get(`/users/${id}`);\n  dispatch({\n    type: 'FETCH_USERS',\n    payload: response.data\n  });\n});","map":{"version":3,"names":["_","jsonPlaceholder","fetchPosts","dispatch","response","get","type","payload","data","fetchUsers","id","_fetchUsers","memoize"],"sources":["/home/hr/1 UDACITY Courses/5 React/UDEMY REACT/Redux-thunk-async-blog-posts/src/actions/index.js"],"sourcesContent":["import _ from 'lodash';\nimport jsonPlaceholder from '../api/jsonPlaceholder'\n\n//in this case with redux we can't use async await syntax without a MIDDLEWARE LIKE THUNK because action creator need to return js plain object but async will return a request object so we need to use a MIDDLEWARE like thunk with redux \n\n// fetch posts from jsonPlaceholder\nexport const fetchPosts =  () => async  dispatch => {\n        const response = await jsonPlaceholder.get('./posts')\n        dispatch ({\n            type: 'FETCH_POSTS',\n            payload: response.data\n        })\n    }\n\n//fetch users from jsonPlaceholder\nexport const fetchUsers =  (id) => async  dispatch => {\n    \n    \n}\n//memoizing out action creator function to avoid dons and repeating of data rendering\nconst _fetchUsers = _.memoize(async (id, dispatch) => {\n    const response = await jsonPlaceholder.get(`/users/${id}`)\n    dispatch ({\n        type: 'FETCH_USERS',\n        payload: response.data\n    })\n})"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,eAAP,MAA4B,wBAA5B,C,CAEA;AAEA;;AACA,OAAO,MAAMC,UAAU,GAAI,MAAM,MAAOC,QAAP,IAAmB;EAC5C,MAAMC,QAAQ,GAAG,MAAMH,eAAe,CAACI,GAAhB,CAAoB,SAApB,CAAvB;EACAF,QAAQ,CAAE;IACNG,IAAI,EAAE,aADA;IAENC,OAAO,EAAEH,QAAQ,CAACI;EAFZ,CAAF,CAAR;AAIH,CANE,C,CAQP;;AACA,OAAO,MAAMC,UAAU,GAAKC,EAAD,IAAQ,MAAOP,QAAP,IAAmB,CAGrD,CAHM,C,CAIP;;AACA,MAAMQ,WAAW,GAAGX,CAAC,CAACY,OAAF,CAAU,OAAOF,EAAP,EAAWP,QAAX,KAAwB;EAClD,MAAMC,QAAQ,GAAG,MAAMH,eAAe,CAACI,GAAhB,CAAqB,UAASK,EAAG,EAAjC,CAAvB;EACAP,QAAQ,CAAE;IACNG,IAAI,EAAE,aADA;IAENC,OAAO,EAAEH,QAAQ,CAACI;EAFZ,CAAF,CAAR;AAIH,CANmB,CAApB"},"metadata":{},"sourceType":"module"}