{"ast":null,"code":"var _jsxFileName = \"/home/hr/1 UDACITY Courses/5 React/UDEMY REACT/Stream-redux/Client-side-Stream-video/src/components/streams/StreamDelete.js\";\nimport React from \"react\";\nimport Modal from \"../Modal\";\nimport { connect } from \"react-redux\";\nimport { fetchStream } from '../../actions';\nimport history from \"../../history\"; // A portal allows us to render some element, not as a direct child.\n// We can instead render that element or that component as a child of some other element inside of our HTML structure, most commonly the body.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamDelete extends React.Component {\n  //fetch stream with id to delete\n  componentDidMount() {\n    this.props.fetchStreams(this.props.match.params.id);\n  }\n\n  renderActions() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui negative basic button\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui blue basic button\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderContent() {\n    if (!this.props.stream) {\n      return \"Are you sure you want to delete this stream?\";\n    }\n\n    return `Are you sure you want to delete this stream with title: ${this.props.title.stream}`;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Delete Stream\",\n        content: this.renderContent(),\n        actions: this.renderActions(),\n        onDismiss: () => history.push('/')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(ownProps);\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamDelete);","map":{"version":3,"names":["React","Modal","connect","fetchStream","history","StreamDelete","Component","componentDidMount","props","fetchStreams","match","params","id","renderActions","renderContent","stream","title","render","push","mapStateToProps","state","ownProps","console","log","streams"],"sources":["/home/hr/1 UDACITY Courses/5 React/UDEMY REACT/Stream-redux/Client-side-Stream-video/src/components/streams/StreamDelete.js"],"sourcesContent":["import React from \"react\";\nimport Modal from \"../Modal\"\nimport {connect} from \"react-redux\";\nimport {fetchStream} from '../../actions'\nimport history from \"../../history\"\n\n\n// A portal allows us to render some element, not as a direct child.\n// We can instead render that element or that component as a child of some other element inside of our HTML structure, most commonly the body.\n\n\nclass StreamDelete extends React.Component {\n\n    //fetch stream with id to delete\n    componentDidMount() {\n        this.props.fetchStreams(this.props.match.params.id);\n    }\n    \n    renderActions() {\n        return (\n            <React.Fragment>\n                <button className=\"ui negative basic button\">Delete</button>\n                <button className=\"ui blue basic button\">Cancel</button>\n            </React.Fragment>\n        )\n    }\n    renderContent() {\n        if (!this.props.stream){\n            return \"Are you sure you want to delete this stream?\"\n        }\n            return `Are you sure you want to delete this stream with title: ${this.props.title.stream}`\n        \n    }\n    render() {\n        return (\n            <div>\n                <Modal\n                title=\"Delete Stream\"\n                content={this.renderContent()}\n                actions={this.renderActions()}\n                onDismiss={() => history.push('/')}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) =>{\n    console.log(ownProps)\n    return {stream:state.streams[ownProps.match.params.id] }\n}\n\nexport default connect(mapStateToProps, {fetchStreams})(StreamDelete);"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,eAA1B;AACA,OAAOC,OAAP,MAAoB,eAApB,C,CAGA;AACA;;;;AAGA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA2C;EAEvC;EACAC,iBAAiB,GAAG;IAChB,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,EAAhD;EACH;;EAEDC,aAAa,GAAG;IACZ,oBACI,QAAC,KAAD,CAAO,QAAP;MAAA,wBACI;QAAQ,SAAS,EAAC,0BAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAQ,SAAS,EAAC,sBAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAMH;;EACDC,aAAa,GAAG;IACZ,IAAI,CAAC,KAAKN,KAAL,CAAWO,MAAhB,EAAuB;MACnB,OAAO,8CAAP;IACH;;IACG,OAAQ,2DAA0D,KAAKP,KAAL,CAAWQ,KAAX,CAAiBD,MAAO,EAA1F;EAEP;;EACDE,MAAM,GAAG;IACL,oBACI;MAAA,uBACI,QAAC,KAAD;QACA,KAAK,EAAC,eADN;QAEA,OAAO,EAAE,KAAKH,aAAL,EAFT;QAGA,OAAO,EAAE,KAAKD,aAAL,EAHT;QAIA,SAAS,EAAE,MAAMT,OAAO,CAACc,IAAR,CAAa,GAAb;MAJjB;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ;EASH;;AAhCsC;;AAmC3C,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAoB;EACxCC,OAAO,CAACC,GAAR,CAAYF,QAAZ;EACA,OAAO;IAACN,MAAM,EAACK,KAAK,CAACI,OAAN,CAAcH,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBC,EAApC;EAAR,CAAP;AACH,CAHD;;AAKA,eAAeV,OAAO,CAACiB,eAAD,EAAkB;EAACV;AAAD,CAAlB,CAAP,CAAyCJ,YAAzC,CAAf"},"metadata":{},"sourceType":"module"}