{"ast":null,"code":"var _jsxFileName = \"/home/hr/1 UDACITY Courses/5 React/UDEMY REACT/Weather App 3/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Season from './components/Season';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      lat: null,\n      errMassage: ''\n    };\n  }\n\n  //Use componentDidMount func to get data from Api\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => this.setState({\n      lat: position.coords.latitude\n    }), err => this.setState({\n      errMassage: err.message\n    }));\n  }\n\n  render() {\n    if (this.state.errMassage && !this.state.lat) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", this.state.errMassage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this);\n    }\n\n    if (!this.state.errMassage && this.state.lat) {\n      return /*#__PURE__*/_jsxDEV(Season, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Season","App","Component","state","lat","errMassage","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","render"],"sources":["/home/hr/1 UDACITY Courses/5 React/UDEMY REACT/Weather App 3/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport Season from './components/Season'\n\nclass App extends React.Component {\n  //constructor func only job is update the state object.\n  // constructor(props) {\n  //   super(props);\n  //   this.state = { lat: null, errMassage: ''}\n  // }\n\n  //This line is equivalent the constructor function so no need to use it anymore.\n  state = { lat: null, errMassage: ''}\n\n    //Use componentDidMount func to get data from Api\n    componentDidMount() {\n      window.navigator.geolocation.getCurrentPosition(\n        position =>this.setState({ lat: position.coords.latitude}),\n        err =>this.setState({ errMassage: err.message})\n\n      )\n    }\n  \n\n\n  render() {\n      if (this.state.errMassage && !this.state.lat){\n        return (\n          <div>Error: {this.state.errMassage}</div>\n        )\n      }\n      if (!this.state.errMassage && this.state.lat){\n        return (<Season/>)\n      }\n  return (\n    <div>Loading!</div>\n  )\n    \n}\n}\n\n\n\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;EAAA;IAAA;IAAA,KAQhCC,KARgC,GAQxB;MAAEC,GAAG,EAAE,IAAP;MAAaC,UAAU,EAAE;IAAzB,CARwB;EAAA;;EAU9B;EACAC,iBAAiB,GAAG;IAClBC,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACEC,QAAQ,IAAG,KAAKC,QAAL,CAAc;MAAER,GAAG,EAAEO,QAAQ,CAACE,MAAT,CAAgBC;IAAvB,CAAd,CADb,EAEEC,GAAG,IAAG,KAAKH,QAAL,CAAc;MAAEP,UAAU,EAAEU,GAAG,CAACC;IAAlB,CAAd,CAFR;EAKD;;EAIHC,MAAM,GAAG;IACL,IAAI,KAAKd,KAAL,CAAWE,UAAX,IAAyB,CAAC,KAAKF,KAAL,CAAWC,GAAzC,EAA6C;MAC3C,oBACE;QAAA,sBAAa,KAAKD,KAAL,CAAWE,UAAxB;MAAA;QAAA;QAAA;QAAA;MAAA,QADF;IAGD;;IACD,IAAI,CAAC,KAAKF,KAAL,CAAWE,UAAZ,IAA0B,KAAKF,KAAL,CAAWC,GAAzC,EAA6C;MAC3C,oBAAQ,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QAAR;IACD;;IACL,oBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAID;;AAlCiC;;AAwClC,eAAeH,GAAf"},"metadata":{},"sourceType":"module"}