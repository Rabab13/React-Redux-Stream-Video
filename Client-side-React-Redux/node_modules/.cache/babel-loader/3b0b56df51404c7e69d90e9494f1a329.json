{"ast":null,"code":"var _jsxFileName = \"/home/hr/1 UDACITY Courses/5 React/UDEMY REACT/Stream-video-React-Redux/src/components/streams/StreamCreate.js\";\nimport React from \"react\";\nimport { Field, reduxForm } from 'redux-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamCreate extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onSubmit = formValue => {\n      console.log(formValue);\n    };\n  }\n\n  renderError(_ref) {\n    let {\n      error,\n      touched\n    } = _ref;\n  }\n\n  renderInput(_ref2) {\n    let {\n      input,\n      label,\n      meta\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), this.renderError(meta)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this);\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui form\",\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"title\",\n        component: this.renderInput,\n        label: \"Enter Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"description\",\n        component: this.renderInput,\n        label: \"Enter Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui inverted purple button000\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst validation = formValue => {\n  const error = {};\n\n  if (!formValue.title) {\n    error.title = 'You must provide a title';\n  }\n\n  if (!formValue.description) {\n    error.description = 'You must provide a description';\n  }\n\n  return error;\n}; //reduxForm() will return the function which created by streamCreate\n\n\nexport default reduxForm({\n  form: 'streamCreate'\n})(StreamCreate);","map":{"version":3,"names":["React","Field","reduxForm","StreamCreate","Component","onSubmit","formValue","console","log","renderError","error","touched","renderInput","input","label","meta","render","props","handleSubmit","validation","title","description","form"],"sources":["/home/hr/1 UDACITY Courses/5 React/UDEMY REACT/Stream-video-React-Redux/src/components/streams/StreamCreate.js"],"sourcesContent":["import React from \"react\";\nimport {Field , reduxForm } from 'redux-form';\n\n\nclass StreamCreate extends React.Component {\n    renderError({error, touched}){\n        \n    }\n\n    renderInput({input , label, meta}) {\n        return (\n        <div className=\"field\">\n            <label>{label}</label>\n            <input {...input} autoComplete=\"off\"/>\n            {this.renderError(meta)}\n        </div>\n        )\n    }\n    onSubmit = (formValue) => {\n        console.log(formValue);\n    }\n\n    render() {\n        console.log(this.props)\n        return (\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form\"> \n                <Field name='title' component={this.renderInput} label='Enter Title'/>\n                <Field name='description' component={this.renderInput} label='Enter Description'/>\n                <button className=\"ui inverted purple button000\">Submit</button>\n            </form>\n        )\n    }\n    \n}\n\nconst validation = (formValue) => {\n    const error = {};\n\n    if (!formValue.title) {\n        error.title = 'You must provide a title'\n    }\n    if (!formValue.description) {\n        error.description = 'You must provide a description'\n    }\n    return error;\n}\n\n//reduxForm() will return the function which created by streamCreate\nexport default reduxForm({form: 'streamCreate'})(StreamCreate);"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAgBC,SAAhB,QAAiC,YAAjC;;;AAGA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;EAAA;IAAA;;IAAA,KAcvCC,QAduC,GAc3BC,SAAD,IAAe;MACtBC,OAAO,CAACC,GAAR,CAAYF,SAAZ;IACH,CAhBsC;EAAA;;EACvCG,WAAW,OAAkB;IAAA,IAAjB;MAACC,KAAD;MAAQC;IAAR,CAAiB;EAE5B;;EAEDC,WAAW,QAAwB;IAAA,IAAvB;MAACC,KAAD;MAASC,KAAT;MAAgBC;IAAhB,CAAuB;IAC/B,oBACA;MAAK,SAAS,EAAC,OAAf;MAAA,wBACI;QAAA,UAAQD;MAAR;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,sBAAWD,KAAX;QAAkB,YAAY,EAAC;MAA/B;QAAA;QAAA;QAAA;MAAA,QAFJ,EAGK,KAAKJ,WAAL,CAAiBM,IAAjB,CAHL;IAAA;MAAA;MAAA;MAAA;IAAA,QADA;EAOH;;EAKDC,MAAM,GAAG;IACLT,OAAO,CAACC,GAAR,CAAY,KAAKS,KAAjB;IACA,oBACI;MAAM,QAAQ,EAAE,KAAKA,KAAL,CAAWC,YAAX,CAAwB,KAAKb,QAA7B,CAAhB;MAAwD,SAAS,EAAC,SAAlE;MAAA,wBACI,QAAC,KAAD;QAAO,IAAI,EAAC,OAAZ;QAAoB,SAAS,EAAE,KAAKO,WAApC;QAAiD,KAAK,EAAC;MAAvD;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,KAAD;QAAO,IAAI,EAAC,aAAZ;QAA0B,SAAS,EAAE,KAAKA,WAA1C;QAAuD,KAAK,EAAC;MAA7D;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAQ,SAAS,EAAC,8BAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAOH;;AA3BsC;;AA+B3C,MAAMO,UAAU,GAAIb,SAAD,IAAe;EAC9B,MAAMI,KAAK,GAAG,EAAd;;EAEA,IAAI,CAACJ,SAAS,CAACc,KAAf,EAAsB;IAClBV,KAAK,CAACU,KAAN,GAAc,0BAAd;EACH;;EACD,IAAI,CAACd,SAAS,CAACe,WAAf,EAA4B;IACxBX,KAAK,CAACW,WAAN,GAAoB,gCAApB;EACH;;EACD,OAAOX,KAAP;AACH,CAVD,C,CAYA;;;AACA,eAAeR,SAAS,CAAC;EAACoB,IAAI,EAAE;AAAP,CAAD,CAAT,CAAkCnB,YAAlC,CAAf"},"metadata":{},"sourceType":"module"}