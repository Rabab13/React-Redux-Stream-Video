{"ast":null,"code":"var _jsxFileName = \"/home/hr/1 UDACITY Courses/5 React/UDEMY REACT/Stream-video-React-Redux/src/components/streams/StreamCreate.js\";\nimport React from \"react\";\nimport { Field, reduxForm } from 'redux-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamCreate extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.renderInput = _ref => {\n      let {\n        input,\n        label,\n        meta\n      } = _ref;\n      const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this);\n    };\n\n    this.onSubmit = formValue => {\n      console.log(formValue);\n    };\n  }\n\n  renderError(_ref2) {\n    let {\n      error,\n      touched\n    } = _ref2;\n\n    if (touched && error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui error massage\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui container form error\",\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"title\",\n        component: this.renderInput,\n        label: \"Enter Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"description\",\n        component: this.renderInput,\n        label: \"Enter Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui inverted purple button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst validation = formValue => {\n  const errors = {};\n\n  if (!formValue.title) {\n    errors.title = 'You must provide a title';\n  }\n\n  if (!formValue.description) {\n    errors.description = 'You must provide a description';\n  }\n\n  return errors;\n}; //reduxForm() will return the function which created by streamCreate\n\n\nexport default reduxForm({\n  form: 'streamCreate',\n  validate: validation\n})(StreamCreate);","map":{"version":3,"names":["React","Field","reduxForm","StreamCreate","Component","renderInput","input","label","meta","className","error","touched","renderError","onSubmit","formValue","console","log","render","props","handleSubmit","validation","errors","title","description","form","validate"],"sources":["/home/hr/1 UDACITY Courses/5 React/UDEMY REACT/Stream-video-React-Redux/src/components/streams/StreamCreate.js"],"sourcesContent":["import React from \"react\";\nimport {Field , reduxForm } from 'redux-form';\n\n\nclass StreamCreate extends React.Component {\n    renderError({error, touched}){\n        if(touched && error){\n            return (\n                <div className=\"ui error massage\">\n                    <div className=\"header\">\n                        {error}\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    renderInput = ({input , label, meta})=> {\n        const className = `field ${meta.error && meta.touched ? 'error':''}`;\n        return (\n        <div className={className}>\n            <label>{label}</label>\n            <input {...input} autoComplete=\"off\"/>\n            {this.renderError(meta)}\n        </div>\n        )\n    }\n    onSubmit = (formValue) => {\n        console.log(formValue);\n    }\n\n    render() {\n        console.log(this.props)\n        return (\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui container form error\"> \n                <Field name='title' component={this.renderInput} label='Enter Title'/>\n                <Field name='description' component={this.renderInput} label='Enter Description'/>\n                <button className=\"ui inverted purple button\">Submit</button>\n            </form>\n        )\n    }\n    \n}\n\nconst validation = (formValue) => {\n    const errors = {};\n\n    if (!formValue.title) {\n        errors.title = 'You must provide a title'\n    }\n    if (!formValue.description) {\n        errors.description = 'You must provide a description'\n    }\n    return errors;\n}\n\n//reduxForm() will return the function which created by streamCreate\nexport default reduxForm({form: 'streamCreate', validate: validation})(StreamCreate);"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAgBC,SAAhB,QAAiC,YAAjC;;;AAGA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;EAAA;IAAA;;IAAA,KAavCC,WAbuC,GAazB,QAA0B;MAAA,IAAzB;QAACC,KAAD;QAASC,KAAT;QAAgBC;MAAhB,CAAyB;MACpC,MAAMC,SAAS,GAAI,SAAQD,IAAI,CAACE,KAAL,IAAcF,IAAI,CAACG,OAAnB,GAA6B,OAA7B,GAAqC,EAAG,EAAnE;MACA,oBACA;QAAK,SAAS,EAAEF,SAAhB;QAAA,wBACI;UAAA,UAAQF;QAAR;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,sBAAWD,KAAX;UAAkB,YAAY,EAAC;QAA/B;UAAA;UAAA;UAAA;QAAA,QAFJ,EAGK,KAAKM,WAAL,CAAiBJ,IAAjB,CAHL;MAAA;QAAA;QAAA;QAAA;MAAA,QADA;IAOH,CAtBsC;;IAAA,KAuBvCK,QAvBuC,GAuB3BC,SAAD,IAAe;MACtBC,OAAO,CAACC,GAAR,CAAYF,SAAZ;IACH,CAzBsC;EAAA;;EACvCF,WAAW,QAAkB;IAAA,IAAjB;MAACF,KAAD;MAAQC;IAAR,CAAiB;;IACzB,IAAGA,OAAO,IAAID,KAAd,EAAoB;MAChB,oBACI;QAAK,SAAS,EAAC,kBAAf;QAAA,uBACI;UAAK,SAAS,EAAC,QAAf;UAAA,UACKA;QADL;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ;IAOH;EACJ;;EAgBDO,MAAM,GAAG;IACLF,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAjB;IACA,oBACI;MAAM,QAAQ,EAAE,KAAKA,KAAL,CAAWC,YAAX,CAAwB,KAAKN,QAA7B,CAAhB;MAAwD,SAAS,EAAC,yBAAlE;MAAA,wBACI,QAAC,KAAD;QAAO,IAAI,EAAC,OAAZ;QAAoB,SAAS,EAAE,KAAKR,WAApC;QAAiD,KAAK,EAAC;MAAvD;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,KAAD;QAAO,IAAI,EAAC,aAAZ;QAA0B,SAAS,EAAE,KAAKA,WAA1C;QAAuD,KAAK,EAAC;MAA7D;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAQ,SAAS,EAAC,2BAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAOH;;AApCsC;;AAwC3C,MAAMe,UAAU,GAAIN,SAAD,IAAe;EAC9B,MAAMO,MAAM,GAAG,EAAf;;EAEA,IAAI,CAACP,SAAS,CAACQ,KAAf,EAAsB;IAClBD,MAAM,CAACC,KAAP,GAAe,0BAAf;EACH;;EACD,IAAI,CAACR,SAAS,CAACS,WAAf,EAA4B;IACxBF,MAAM,CAACE,WAAP,GAAqB,gCAArB;EACH;;EACD,OAAOF,MAAP;AACH,CAVD,C,CAYA;;;AACA,eAAenB,SAAS,CAAC;EAACsB,IAAI,EAAE,cAAP;EAAuBC,QAAQ,EAAEL;AAAjC,CAAD,CAAT,CAAwDjB,YAAxD,CAAf"},"metadata":{},"sourceType":"module"}