{"ast":null,"code":"var _jsxFileName = \"/home/hr/1 UDACITY Courses/5 React/UDEMY REACT/Stream-redux/Client-side-Stream-video/src/components/streams/StreamEdit.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStreams } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamEdit extends React.Component {\n  //Each component needs to fetch it data isolate so we will call componentDidMount to fetch streams here again \n  componentDidMount() {\n    this.props.fetchStreams(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 20\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Stream Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(ownProps);\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamEdit);","map":{"version":3,"names":["React","connect","fetchStreams","StreamEdit","Component","componentDidMount","props","match","params","id","render","stream","mapStateToProps","state","ownProps","console","log","streams"],"sources":["/home/hr/1 UDACITY Courses/5 React/UDEMY REACT/Stream-redux/Client-side-Stream-video/src/components/streams/StreamEdit.js"],"sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {fetchStreams} from '../../actions'\n\nclass StreamEdit extends React.Component {\n    //Each component needs to fetch it data isolate so we will call componentDidMount to fetch streams here again \n    componentDidMount() {\n        this.props.fetchStreams(this.props.match.params.id);\n    }\n\n    render() {\n        if(!this.props.stream)\n            return <div>Loading...</div>\n        return (\n            <div>Stream Edit</div>\n        )\n    }\n    \n}\n\nconst mapStateToProps = (state, ownProps) =>{\n    console.log(ownProps)\n    return {stream:state.streams[ownProps.match.params.id] }\n}\n\nexport default connect(mapStateToProps, {fetchStreams})(StreamEdit);"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,YAAR,QAA2B,eAA3B;;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;EACrC;EACAC,iBAAiB,GAAG;IAChB,KAAKC,KAAL,CAAWJ,YAAX,CAAwB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAhD;EACH;;EAEDC,MAAM,GAAG;IACL,IAAG,CAAC,KAAKJ,KAAL,CAAWK,MAAf,EACI,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;IACJ,oBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH;;AAZoC;;AAgBzC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAoB;EACxCC,OAAO,CAACC,GAAR,CAAYF,QAAZ;EACA,OAAO;IAACH,MAAM,EAACE,KAAK,CAACI,OAAN,CAAcH,QAAQ,CAACP,KAAT,CAAeC,MAAf,CAAsBC,EAApC;EAAR,CAAP;AACH,CAHD;;AAKA,eAAeR,OAAO,CAACW,eAAD,EAAkB;EAACV;AAAD,CAAlB,CAAP,CAAyCC,UAAzC,CAAf"},"metadata":{},"sourceType":"module"}