{"ast":null,"code":"var _jsxFileName = \"/home/hr/1 UDACITY Courses/5 React/UDEMY REACT/Redux-Song-App/src/components/SongList.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SongList extends Component {\n  renderList() {\n    return this.props.songs.map(songs);\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  }\n\n} //mapStateToProps is used for selecting the part of the data from the store that the connected component needs.\n// It is called every time the store state changes.\n// It receives the entire store state, and should return an object of data this component needs.\n//state here contain all redux store data we need as selectedSong and selectedSongReducer\n\n\nconst mapStateToProps = state => {\n  console.log('Store Data:', state);\n  return {\n    songs: state.songs\n  };\n};\n\nexport default connect(mapStateToProps)(SongList);","map":{"version":3,"names":["React","Component","connect","SongList","renderList","props","songs","map","render","console","log","mapStateToProps","state"],"sources":["/home/hr/1 UDACITY Courses/5 React/UDEMY REACT/Redux-Song-App/src/components/SongList.js"],"sourcesContent":["import React, {Component} from \"react\";\nimport {connect} from 'react-redux'\n\nclass SongList extends Component {\n\n    renderList() {\n        return (this.props.songs.map((songs)))\n    }\n    render() {\n        console.log(this.props)\n        return (\n            <div >\n                \n            </div>\n        )\n    }\n}\n//mapStateToProps is used for selecting the part of the data from the store that the connected component needs.\n// It is called every time the store state changes.\n// It receives the entire store state, and should return an object of data this component needs.\n//state here contain all redux store data we need as selectedSong and selectedSongReducer\nconst mapStateToProps = (state) =>{\n    console.log('Store Data:' ,state)\n\n    return {songs:state.songs}\n}\nexport default connect(mapStateToProps)(SongList);"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;EAE7BG,UAAU,GAAG;IACT,OAAQ,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAsBD,KAAtB,CAAR;EACH;;EACDE,MAAM,GAAG;IACLC,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;IACA,oBACI;MAAA;MAAA;MAAA;IAAA,QADJ;EAKH;;AAZ4B,C,CAcjC;AACA;AACA;AACA;;;AACA,MAAMM,eAAe,GAAIC,KAAD,IAAU;EAC9BH,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BE,KAA3B;EAEA,OAAO;IAACN,KAAK,EAACM,KAAK,CAACN;EAAb,CAAP;AACH,CAJD;;AAKA,eAAeJ,OAAO,CAACS,eAAD,CAAP,CAAyBR,QAAzB,CAAf"},"metadata":{},"sourceType":"module"}